plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    //kotlin("kapt")
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.compose'
    compileSdk 33

    defaultConfig {
        applicationId "com.compose"
        minSdk 24
        targetSdk 33
        versionCode 3
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.4.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.8.10"
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    implementation "androidx.navigation:navigation-compose:2.5.3"

    implementation("com.google.dagger:hilt-android:2.44")
     kapt("com.google.dagger:hilt-android-compiler:2.44")

// Android
   // val voyagerVersion = "1.0.0-rc04"
    // Android ViewModel integration
    implementation("cafe.adriel.voyager:voyager-navigator:1.0.0-rc04")
    implementation("cafe.adriel.voyager:voyager-androidx:1.0.0-rc04")

    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.3.1")

    implementation("androidx.preference:preference:1.2.0")

    implementation project(path: ':BaseUi')
    implementation "com.google.accompanist:accompanist-placeholder-material:0.31.0-alpha"

}
// 获取当前系统时间
static def getTime() {
    return new Date().format("yyyyMMddHHmmss")
}
android.applicationVariants.all { variant ->
    variant.outputs.all {
        String appName = "myoffer"
        def date = getTime()
        if (variant.buildType.name == ('release')) {
            outputFileName = "${variant.versionName}_${buildType.name}$date" + ".apk"
        }else {
            outputFileName="myoffer${variant.versionCode}_${buildType.name}.apk"
        }
//        outputDirectory = new File("E:\\AndroidStudioProjects\\Compose")
        //附加一个任务
        variant.assembleProvider.get().doLast {
            if (variant.buildType.name == ('release')) {
                def isWindows = System.getProperty("os.name").toLowerCase().contains("windows")

             //  variant.getPackageApplicationProvider().get().outputDirectory = new File("E:\\AndroidStudioProjects\\Compose")
                //是否在windows 下
                if (!isWindows) {
                    variant.getPackageApplicationProvider().get().outputDirectory = new File("/Users/apple/Downloads/download/")
                } else {
                    //使用360加固打包，只加固渠道应用宝。
                    def name = System.getenv().get("COMPUTERNAME")
                  //  def channelName=variant.productFlavors[0].name;
                    //只加固360 和应用宝的apk


                }

            }
        }
    }

}
// Allow references to generated code
/*
kapt {
    correctErrorTypes = true
}*/
